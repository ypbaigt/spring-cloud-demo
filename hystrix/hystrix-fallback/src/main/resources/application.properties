spring.application.name=hystrix-consumer
server.port=50000

# 允许重载
spring.main.allow-bean-definition-overriding=true

eureka.client.serviceUrl.defaultZone=http://localhost:20000/eureka/

# 开启Feign下面的Hystrix功能
feign.hystrix.enabled=true

# 是否开启服务降级 默认true
hystrix.command.default.fallback.enable=true
# 全局超时
hystrix.command.default.execution.timeout.enabled=true
# 超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
# 超时以后终止线程
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# 取消以后终止线程
hystrix.command.default.execution.isolation.thread.interruptOnFutureCancel=true

# 针对具体方法设置
#hystrix.command.cacheKey.execution.isolation.thread.timeoutInMilliseconds=30000

# =======正儿八经的参数===========
# 熔断的前提条件（请求数量），在一定窗口内，请求达到5个 才开始熔断的判断，阈值
hystrix.command.default.circuitBreaker.requestVolumeThreshold=5
# 百分比，当失败的次数达到50% 熔断开启
hystrix.command.default.circuitBreaker.errorThresoldPercentage=50
# 当熔断开启（开始）以后，经过多少秒再进入半开状态 （通常时间要小于配置的时间窗口），
# 半开状态时 Hstrix会尝试放请求过去看是否正常，正常则熔断关闭
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=15000
# 配置时间窗口，即N秒内请求达到多少个 达到熔断条件
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=20000

# ==========不用设置，默认就开启的参数===========
# 开启熔断功能
hystrix.command.default.circuitBreaker.enabled=true
# 强制开启熔断开关（正常服务业会熔断）默认false
hystrix.command.default.circuitBreaker.forceOpen=false
# 强制关闭熔断开关
hystrix.command.default.circuitBreaker.forceClosed=false

# 开启访问缓存功能，默认是打开
hystrix.command.default.requestCache.enabled=true

# 每台机器最大重试次数
feign-client.ribbon.MaxAutoRetries=0
# 可以再重试几台机器
feign-client.ribbon.MaxAutoRetriesNextServer=0
# 创建连接超时，生产环境200ms
feign-client.ribbon.ConnectTimeout=1000000
# 业务处理超时
feign-client.ribbon.ReadTimeout=30000
# 在所有http method 进行重试(get,post,put等)，一般只开get，post需要保证幂等性
feign-client.ribbon.OkToRetryOnAllOperations=false


# actuator暴露接口
management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always